services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: nc -z localhost 2181 || exit -1 
      interval: 15s
      timeout: 5s
      retries: 15 
    networks:
      - kafka-net  
    
    
  kafka0:
    image: confluentinc/cp-kafka:latest
    restart: "unless-stopped"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CREATE_TOPICS: "dead_letter:1:3, main_topic:1:3"
    healthcheck:
      # test: ["CMD-SHELL", "kafka-topics --bootstrap-server 127.0.0.1:9092 --topic dead_letter --describe"]
      test: nc -z localhost 9092 || exit -1 
      interval: 15s
      timeout: 15s
      retries: 15
    networks:
      - kafka-net
  kafka1:
    image: confluentinc/cp-kafka:latest
    restart: "unless-stopped"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    healthcheck:
      test: nc -z localhost 9093 || exit -1 
      interval: 15s
      timeout: 5s
      retries: 15  
    networks:
      - kafka-net
  kafka2:
    image: confluentinc/cp-kafka:latest
    restart: "unless-stopped"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    healthcheck:
      test: nc -z localhost 9094 || exit -1 
      interval: 15s
      timeout: 5s
      retries: 15  
    networks:
      - kafka-net

  consumer:
    restart: on-failure
    build: Consumer/
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka0
    networks:
      - kafka-net
    profiles:
      - "run"

  producer:
    restart: on-failure
    build: Producer/
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka0
    networks:
      - kafka-net
    profiles:
      - "run"
  
networks:
  kafka-net:
    driver: 
      bridge